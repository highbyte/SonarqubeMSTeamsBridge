# This is a basic workflow to help you get started with Actions

name: sonarscan-dotnet

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: '00 7 * * 0'

  workflow_dispatch:    
    
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v4
      with:
        fetch-depth: '0'
    - name: sonarscan-dotnet
      uses: highbyte/sonarscan-dotnet@v2.3.1
      with:
        # The key of the SonarQube project
        sonarProjectKey: highbyte_SonarqubeMSTeamsBridge
        # The name of the SonarQube project
        sonarProjectName: SonarqubeMSTeamsBridge
        # The name of the SonarQube organization
        sonarOrganization: highbyte
        # Optional command arguments to dotnet build
        dotnetBuildArguments: ./src
        # Optional command arguments to dotnet test
        dotnetTestArguments: ./src --logger trx --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
        # Optional extra command arguments the the SonarScanner 'begin' command
        sonarBeginArguments: /d:sonar.cs.opencover.reportsPaths="**/TestResults/**/coverage.opencover.xml" -d:sonar.cs.vstest.reportsPaths="**/TestResults/*.trx"
        # The SonarQube server URL. For SonarCloud, don't set this setting.
        #sonarHostname: # optional, default is https://sonarcloud.io

    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
